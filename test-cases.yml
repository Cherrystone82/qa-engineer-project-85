- summary: |
    Успешная авторизация с корректными данными
  requirement: |
    При правильном логине и пароле пользователь должен войти в систему
  prerequisites: |
    Открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    Логин = user1@example.com
    Пароль = securepassword123
  steps:
    - Открыть главную страницу https://codebattle.hexlet.io/
    - Нажать кнопку "Sign in"
    - Ввести user1@example.com в поле "Email или логин"
    - Ввести securepassword123 в поле "Пароль"
    - Нажать кнопку "Submit"
  expected-result: |
    Пользователь перенаправлен на страницу лобби
    
- summary: |
    Неудачная авторизация с неверным паролем
  requirement: |
    Система должна отображать ошибку при вводе неправильного пароля
  prerequisites: |
    Открыта страница авторизации
  test-data: |
    Логин = user2@example.com  
    Пароль = wrongpass
  steps:
    - Перейти на https://codebattle.hexlet.io/ 
    - Ввести user@example.com в поле Email или логин
    - Ввести wrongpass в поле Пароль
    - Нажать кнопку Войти
  expected-result: |
    Отображается сообщение: Неверный логин или пароль

- summary: |
    Неудачная авторизация с пустым полем логина
  requirement: |
    Система должна предупредить о том, что поле логина не может быть пустым
  prerequisites: |
    Открыта страница авторизации
  test-data: |
    Логин = <пусто>  
    Пароль = password
  steps:
    - Перейти на https://codebattle.hexlet.io/ 
    - Оставить поле Email или Логин пустым
    - Ввести Password в поле Пароль
    - Нажать кнопку Войти
  expected-result: |
    Отображается сообщение: Логин не может быть пустым

- summary: |
    Неудачная авторизация с пустым полем пароля
  requirement: |
    Система должна предупредить о том, что поле пароля не может быть пустым
  prerequisites: |
    Открыта страница авторизации
  test-data: |
    Логин = user3@example.com  
    Пароль = <пусто>
  steps:
    - Перейти на https://codebattle.hexlet.io/ 
    - Ввести user@example.com в поле Email или логин
    - Оставить поле Пароль пустым
    - Нажать кнопку Войти
  expected-result: |
    Отображается сообщение: Пароль не может быть пустым

- summary: |
    Проверка авторизации через GitHub
  requirement: |
    Система должна предоставлять вход через OAuth-интеграцию с GitHub
  prerequisites: |
    Открыта главная страница
    Аккаунт GitHub существует и не заблокирован
  test-data: |
    Валидные учетные данные GitHub
  steps:
    - Нажать Sign in with GitHub
    - Ввести логин/пароль GitHub (если не авторизованы)
    - Подтвердить разрешения для Codebattle
  expected-result: |
    Перенаправление на /games
    В хедере отображается аватар пользователя
    Кнопка входа заменена на меню профиля

- summary: |
    Успешная регистрация нового пользователя
  requirement: |
    Новый пользователь может зарегистрироваться, указав email и пароль
  prerequisites: |
    Открыта страница регистрации
  test-data: |
    Email = newuser@example.com  
    Пароль = mynewpassword123
  steps:
    - Перейти на https://codebattle.hexlet.io/ 
    - Нажать ссылку Регистрация
    - Ввести newuser@example.com в поле Email
    - Ввести mynewpassword123 в поле Пароль
    - Нажать кнопку Зарегистрироваться
  expected-result: |
    Пользователь успешно зарегистрирован и перенаправлен на страницу лобби

- summary: |
    Попытка регистрации с уже существующим email
  requirement: |
    Система должна отклонить регистрацию при использовании занятого email
  prerequisites: |
    - Пользователь находится на главной странице https://codebattle.hexlet.io/
    - Аккаунт с email existing@example.com уже существует
  test-data: |
    - Email: existing@example.com
    - Пароль: anotherpassword
  steps:
    - Открыть главную страницу https://codebattle.hexlet.io/
    - Нажать кнопку Sign up
    - Ввести existing@example.com в поле Email
    - Ввести anotherpassword в поле Password
    - Нажать кнопку Sign up
  expected-result: |
    - Отображается сообщение об ошибке Email is already taken
    - Пользователь остается на странице регистрации
    - Новый аккаунт не создается

- summary: |
    Восстановление пароля через email
  requirement: |
    Система должна отправить инструкции по сбросу пароля на указанный email
  prerequisites: |
    - Пользователь находится на главной странице
    - Аккаунт user@example.com существует в системе
  test-data: |
    - Зарегистрированный email: user@example.com
  steps:
    - Открыть https://codebattle.hexlet.io/
    - Нажать кнопку Sign in
    - Найти и нажать ссылку Forgot your password?
    - Ввести user@example.com в поле Email
    - Нажать кнопку Submit
  expected-result: |
    - Появляется сообщение: We have sent you an email with instructions on how to reset your password
    - Письмо с инструкциями отправлено на user@example.com
    - Ссылка в письме ведет на страницу смены пароля
    
- summary: |
    Неудачная попытка восстановления пароля с несуществующим email
  requirement: |
    Система должна обработать запрос без раскрытия существования email
  prerequisites: |
    - Открыта главная страница https://codebattle.hexlet.io/
    - Аккаунт fakeemail@example.com не зарегистрирован
  test-data: |
    - Email: fakeemail@example.com
  steps:
    - Открыть https://codebattle.hexlet.io/
    - Нажать Sign in
    - Нажать Forgot your password?
    - Ввести fakeemail@example.com в поле Email
    - Нажать Submit
  expected-result: |
    - Отображается сообщение: We have sent you an email with instructions on how to reset your password
    - Письмо НЕ приходит на fakeemail@example.com
    - Система не раскрывает, зарегистрирован email или нет

- summary: |
    Корректный выход из аккаунта
  requirement: |
    Пользователь может разлогиниться
  prerequisites: |
    Пользователь авторизован
  test-data: |
    Активная сессия
  steps:
    - Перейти в меню пользователя
    - Нажать Logout
  expected-result: |
    Пользователь перенаправлен на страницу входа
    
- summary: |
    Выбор языка программирования
  requirement: |
    Пользователь может выбрать язык программирования перед началом боя
  prerequisites: |
    Пользователь авторизован и находится на странице лобби
  test-data: |
    Выбранный язык = Python
  steps:
    - Перейти на https://codebattle.hexlet.io/lobby 
    - Нажать на кнопку Python
  expected-result: |
    Язык Python выделен, можно начать бой

- summary: |
    Просмотр профиля пользователя
  requirement: |
    Авторизованный пользователь может просматривать свой профиль
  prerequisites: |
    Пользователь авторизован
  test-data: |
    Пользователь = user1@example.com
  steps:
    - Перейти в меню пользователя
    - Нажать Профиль
  expected-result: |
    Отображается информация о пользователе: никнейм, количество побед, уровень

- summary: |
    Просмотр истории боёв
  requirement: |
    Пользователь может просмотреть историю своих боёв
  prerequisites: |
    Пользователь авторизован
  test-data: |
    Пользователь имеет минимум один бой в истории
  steps:
    - Перейти в меню пользователя
    - Нажать STATISTICS
  expected-result: |
    Отображается список прошлых боёв с результатами

- summary: |
    Создание игры с приглашением конкретного друга через лобби
  requirement: |
    Система должна позволять выбрать друга из списка онлайн-пользователей
  prerequisites: |
    - Авторизованный пользователь Tempest82
    - Друг (например, gugu) онлайн и виден в лобби
  test-data: |
    - Никнейм друга: gugu
    - Тип игры: With a friend
    - Уровень: 2 stars 
  steps:
    - Нажать CREATE A GAME в правой панели
    - Выбрать With a friend в разделе Game Type
    - В списке Choose opponent выбрать gugu
    - Оставить остальные параметры по умолчанию = Time control - 8 min, Task selection - random task
    - Нажать Create battle
  expected-result: |
    - Система создает игровую комнату
    - В лобби отображается статус Waiting for gugu
    - В чате появляется системное сообщение: You invited gugu to battle

- summary: |
    Принятие приглашения в игру через интерфейс лобби
  requirement: |
    Система должна отображать входящие приглашения в лобби
  prerequisites: |
    - Пользователь gugu авторизован и онлайн
    - Имеется активное приглашение от Tempest82
  test-data: |
    - Никнейм приглашающего: Tempest82
  steps:
    - Найти свою учетную запись в списке Lobby например - gugu
    - Рядом с ником должна отображаться иконка приглашения мечи
    - Нажать на иконку приглашения
    - В появившемся окне нажать Accept
  expected-result: |
    - Оба игрока перенаправляются в игровую комнату
    - В лобби статус меняется на In battle: Tempest82 vs gugu
    - В чате отображается: gugu accepted invitation

- summary: |
    Создание приватного боя через интерфейс лобби
  requirement: |
    Система должна генерировать уникальную игровую комнату
  prerequisites: |
    - Авторизованный пользователь, например, Tempest82
    - Открыта страница лобби lobby
  test-data: |
    - Уровень: 215, соответствует рейтингу
    - Ссылка: codebattle.hexlet.io/games/номер комнаты/ например 276824
  steps:
    - Нажать CREATE A GAME в правой панели
    - Выбрать тип игры With a friend
    - Подтвердить уровень сложности 215
    - Нажать Create battle
    - Скопировать ссылку из раздела General - codebattle.hexlet.io/games/276824/
  expected-result: |
    - В разделе 'General' отображается ссылка на игру

- summary: |
    Присоединение к приватному бою через прямую ссылку
  requirement: |
    Система должна обеспечить подключение по валидной ссылке
  prerequisites: |
    - Авторизованный пользователь, например, gugu
    - Активная приватная комната - ID: 276824
  test-data: |
    - Ссылка: codebattle.hexlet.io/games/276824/
  steps:
    - Открыть ссылку из раздела General
    - Подтвердить подключение в диалоговом окне
    - Дождаться загрузки игрового интерфейса
  expected-result: |
    - Оба игрока видят противника (Tempest82 vs gogo), таймер обратного отсчета, одинаковое условие задачи
    - В лобби статус изменен на In battle: Tempest82 vs Lenikus

- summary: |
    Проверка пагинации в лобби
  requirement: |
    При большом количестве игр должна работать постраничная навигация
  prerequisites: |
    В системе более 10 активных игр
  test-data: |
    Активные игры: 25
  steps:
    - Прокрутить список игр вниз
    - Нажать Next Page
  expected-result: |
    Загружается следующая страница с играми
    Сохраняются примененные фильтры
    Активная страница выделяется в пагинаторе

- summary: |
    Проверка возможности переключения языка интерфейса с английского на русский и обратно
  requirement: |
    Пользователь должен иметь возможность изменить язык интерфейса. После переключения все элементы интерфейса должны отображаться на выбранном языке.
  prerequisites: |
    Открыта главная страница Codebattle 
    Язык интерфейса установлен по умолчанию английский
  test-data: |
    Доступные языки:
    - Английский
    - Русский
  steps:
    - Найти и кликнуть на переключатель языка (иконка флага/выпадающий список)
    - Выбрать язык Русский
    - Проверить изменение текста интерфейса (например, кнопка Login → Войти)
    - Переключить язык обратно на английский
    - Убедиться, что интерфейс вернулся к английскому языку
  expected-result: |
    После выбора русского языка интерфейс переключается на русский (кнопки, меню и другие элементы изменяются соответствующим образом)
    При возврате на английский язык интерфейс корректно отображается на английском
    Никакие функциональные элементы не ломаются при переключении языка
